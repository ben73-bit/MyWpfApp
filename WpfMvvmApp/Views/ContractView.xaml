<!-- WpfMvvmApp/Views/ContractView.xaml -->
<UserControl x:Class="WpfMvvmApp.Views.ContractView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WpfMvvmApp.Views"
             xmlns:vm="clr-namespace:WpfMvvmApp.ViewModels"
             xmlns:converters="clr-namespace:WpfMvvmApp.Converters" 
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=vm:MainViewModel}">

    <UserControl.Resources>
        <!-- DataTemplate per LessonView -->
        <DataTemplate DataType="{x:Type vm:ContractViewModel}">
            <local:LessonView />
        </DataTemplate>

        <!-- Converter per abilitare/disabilitare dettagli -->
        <!-- Assicurati che sia definito (qui o in App.xaml) -->
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>

        <!-- Stile per i TextBox con Feedback di Validazione -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!-- Disabilita il template di errore predefinito di WPF -->
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <!-- Mostra l'errore corrente nel ToolTip -->
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

         <!-- Stile per i DatePicker (feedback simile) -->
         <Style TargetType="{x:Type DatePicker}">
             <Setter Property="Margin" Value="0,0,0,5"/>
             <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
             <Style.Triggers>
                 <Trigger Property="Validation.HasError" Value="true">
                     <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                     <Setter Property="BorderBrush" Value="Red"/>
                     <Setter Property="BorderThickness" Value="1.5"/>
                 </Trigger>
             </Style.Triggers>
         </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" MinWidth="220"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Pannello controlli -->
        <StackPanel Orientation="Horizontal" Margin="5" Grid.Row="0" Grid.Column="0">
            <Button Content="Add Contract" Command="{Binding AddNewContractCommand}" Margin="0,0,5,0"/>
        </StackPanel>

        <!-- Lista contratti -->
        <ListView Grid.Row="1" Grid.Column="0"
                  ItemsSource="{Binding Contracts}"
                  SelectedItem="{Binding SelectedContract, Mode=TwoWay}"
                  Margin="5" ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Company" DisplayMemberBinding="{Binding Company}" Width="120"/>
                    <GridViewColumn Header="Contract Number" DisplayMemberBinding="{Binding ContractNumber}" Width="110"/>
                    <GridViewColumn Header="Hourly Rate" DisplayMemberBinding="{Binding HourlyRate, StringFormat=C}" Width="80"/>
                    <GridViewColumn Header="Total Hours" DisplayMemberBinding="{Binding TotalHours}" Width="70"/>
                    <GridViewColumn Header="Billed Hours" DisplayMemberBinding="{Binding BilledHours}" Width="70"/>
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Pannello dettagli contratto -->
        <StackPanel Grid.Row="1" Grid.Column="1" Margin="5"
                    DataContext="{Binding SelectedContract}"
                    IsEnabled="{Binding SelectedContract, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource NullToBooleanConverter}}">

            <TextBlock Text="Contract Details" FontWeight="Bold" Margin="0,0,0,5"/>

            <TextBlock Text="Company:" />
            <TextBox Text="{Binding Company, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

            <TextBlock Text="Contract Number:" />
            <TextBox Text="{Binding ContractNumber, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

            <TextBlock Text="Hourly Rate:" />
            <!-- TextBox per HourlyRate con ExceptionValidationRule -->
            <TextBox>
                <TextBox.Text>
                    <Binding Path="HourlyRate" UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True" StringFormat="C" >
                        <Binding.ValidationRules>
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Total Contract Hours:" />
            <!-- TextBox per TotalHours con ExceptionValidationRule -->
            <TextBox>
                <TextBox.Text>
                    <Binding Path="TotalHours" UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True">
                        <Binding.ValidationRules>
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBlock Text="Billed Hours (Manual):" />
            <!-- TextBox per BilledHours con ExceptionValidationRule -->
            <TextBox>
                <TextBox.Text>
                    <Binding Path="BilledHours" UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True"> <!-- Mantenere se ci sono regole DataAnnotations per BilledHours -->
                        <Binding.ValidationRules>
                            <ExceptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <!-- Sezione Ore Calcolate -->
            <Border Background="AliceBlue" Padding="8" Margin="0,10,0,10" CornerRadius="3">
                <StackPanel>
                     <TextBlock Text="Lesson Hours Summary" FontWeight="Bold" Margin="0,0,0,5" HorizontalAlignment="Center"/>
                     <Grid>
                         <Grid.ColumnDefinitions>
                             <ColumnDefinition Width="Auto"/>
                             <ColumnDefinition Width="*" MinWidth="40" />
                         </Grid.ColumnDefinitions>
                         <Grid.RowDefinitions>
                             <RowDefinition Height="Auto"/>
                             <RowDefinition Height="Auto"/>
                             <RowDefinition Height="Auto"/>
                         </Grid.RowDefinitions>
                         <TextBlock Grid.Row="0" Grid.Column="0" Text="Inserted:" FontWeight="SemiBold" Margin="0,1,10,1" VerticalAlignment="Center"/>
                         <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding TotalInsertedHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                         <TextBlock Grid.Row="1" Grid.Column="0" Text="Confirmed:" FontWeight="SemiBold" Margin="0,1,10,1" VerticalAlignment="Center"/>
                         <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TotalConfirmedHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                         <TextBlock Grid.Row="2" Grid.Column="0" Text="Remaining:" FontWeight="SemiBold" Margin="0,1,10,1" VerticalAlignment="Center"/>
                         <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding RemainingHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                     </Grid>
                </StackPanel>
            </Border>
            <!-- Fine Sezione Ore Calcolate -->

             <TextBlock Text="Start Date:" />
             <DatePicker SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
             <TextBlock Text="End Date:" />
             <DatePicker SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>

            <Button Content="Save Contract" Command="{Binding DataContext.SaveContractCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    IsEnabled="{Binding IsValid}" Margin="0,5,0,0" />
        </StackPanel>

        <!-- ContentControl per LessonView -->
        <ContentControl Grid.Row="2" Grid.ColumnSpan="2" Margin="5,10,5,5"
                        Content="{Binding SelectedContract}"/>
    </Grid>
</UserControl>