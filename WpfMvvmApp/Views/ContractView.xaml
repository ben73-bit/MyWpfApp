<!-- WpfMvvmApp/Views/ContractView.xaml -->
<UserControl x:Class="WpfMvvmApp.Views.ContractView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WpfMvvmApp.Views"
             xmlns:vm="clr-namespace:WpfMvvmApp.ViewModels"
             xmlns:converters="clr-namespace:WpfMvvmApp.Converters"
             mc:Ignorable="d"
             d:DesignHeight="650" d:DesignWidth="850"
             d:DataContext="{d:DesignInstance Type=vm:MainViewModel}">

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type vm:ContractViewModel}"> <local:LessonView Margin="0,5,0,0"/> </DataTemplate>
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
        <!-- Gli stili BaseButton, PrimaryButtonStyle, RemoveButtonStyle, ValidatedInputTextBox,
             ValidatedDatePicker, LabelTextBlock, GroupBox sono ora definiti in App.xaml (presumibilmente)
             e applicati implicitamente o esplicitamente sotto.
             Potremmo rimuovere le definizioni da qui se sono globali in App.xaml,
             ma le lascio commentate per riferimento nel caso servissero localmente. -->
        <!--
        <Style TargetType="{x:Type TextBox}" x:Key="ValidatedInputTextBox" BasedOn="{StaticResource {x:Type TextBox}}"> ... </Style>
        <Style TargetType="{x:Type DatePicker}" x:Key="ValidatedDatePicker" BasedOn="{StaticResource {x:Type DatePicker}}"> ... </Style>
        <Style TargetType="TextBlock" x:Key="LabelTextBlock"> ... </Style>
        <Style TargetType="Button" x:Key="PrimaryButtonStyle" BasedOn="{StaticResource {x:Type Button}}"> ... </Style>
        <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}"> ... </Style>
        <Style TargetType="Button" x:Key="RemoveButtonStyle" BasedOn="{StaticResource {x:Type Button}}"> ... </Style>
        -->
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.ColumnDefinitions> <ColumnDefinition Width="*" MinWidth="300"/> <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="1.5*" MinWidth="350"/> </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions> <RowDefinition Height="Auto"/> <RowDefinition Height="*"/> <RowDefinition Height="Auto"/> </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Contracts" FontSize="16" FontWeight="Bold" Margin="5,0,0,10"/>
            <ListView Grid.Row="1" ItemsSource="{Binding Contracts}" SelectedItem="{Binding SelectedContract, Mode=TwoWay}" Margin="5,0" ScrollViewer.VerticalScrollBarVisibility="Auto"> <ListView.View> <GridView> <GridViewColumn Header="Company" DisplayMemberBinding="{Binding Company}" Width="120"/> <GridViewColumn Header="Contract Number" DisplayMemberBinding="{Binding ContractNumber}" Width="110"/> </GridView> </ListView.View> </ListView>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left">
                <!-- Pulsante Add usa stile base (implicito da App.xaml) -->
                <Button Content="Add New Contract" Command="{Binding AddNewContractCommand}" />
                <!-- Pulsante Remove usa stile specifico RemoveButtonStyle -->
                <Button Content="Remove Selected" Style="{StaticResource RemoveButtonStyle}" Command="{Binding RemoveContractCommand}" IsEnabled="{Binding SelectedContract, Converter={StaticResource NullToBooleanConverter}}" ToolTip="Delete the currently selected contract and all its lessons"/>
            </StackPanel>
        </Grid>
        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Gainsboro" Margin="0,5"/>
        <DockPanel Grid.Column="2" Margin="5,0,0,0" LastChildFill="True" DataContext="{Binding SelectedContract}" IsEnabled="{Binding SelectedContract, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource NullToBooleanConverter}}">
            <GroupBox DockPanel.Dock="Top" Header="Contract Details" FontWeight="Bold">
                 <Grid>
                     <Grid.ColumnDefinitions> <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="*"/> </Grid.ColumnDefinitions> <Grid.RowDefinitions> <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> </Grid.RowDefinitions>
                     <!-- TextBlock usa stile LabelTextBlock -->
                     <TextBlock Grid.Row="0" Grid.Column="0" Text="Company:" Style="{StaticResource LabelTextBlock}"/>
                     <!-- TextBox usa stile implicito ValidatedInputTextBox (da App.xaml) -->
                     <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Company, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                     <TextBlock Grid.Row="1" Grid.Column="0" Text="Contract Number:" Style="{StaticResource LabelTextBlock}"/>
                     <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding ContractNumber, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                     <TextBlock Grid.Row="2" Grid.Column="0" Text="Hourly Rate (€):" Style="{StaticResource LabelTextBlock}"/>
                     <TextBox Grid.Row="2" Grid.Column="1"> <TextBox.Text> <Binding Path="HourlyRate" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" StringFormat="N2"> <Binding.ValidationRules><ExceptionValidationRule /></Binding.ValidationRules> </Binding> </TextBox.Text> </TextBox>
                     <TextBlock Grid.Row="3" Grid.Column="0" Text="Total Contract Hours:" Style="{StaticResource LabelTextBlock}"/>
                     <TextBox Grid.Row="3" Grid.Column="1"> <TextBox.Text> <Binding Path="TotalHours" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True"> <Binding.ValidationRules><ExceptionValidationRule /></Binding.ValidationRules> </Binding> </TextBox.Text> </TextBox>
                     <TextBlock Grid.Row="4" Grid.Column="0" Text="Billed Hours:" Style="{StaticResource LabelTextBlock}"/>
                     <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding BilledHours, Mode=OneWay, StringFormat='{}{0:F2} h'}" IsReadOnly="True" ToolTip="Calculated from billed lessons"/>
                     <TextBlock Grid.Row="5" Grid.Column="0" Text="Start Date:" Style="{StaticResource LabelTextBlock}"/>
                     <!-- DatePicker usa stile implicito ValidatedDatePicker (da App.xaml) -->
                     <DatePicker Grid.Row="5" Grid.Column="1" SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                     <TextBlock Grid.Row="6" Grid.Column="0" Text="End Date:" Style="{StaticResource LabelTextBlock}"/>
                     <DatePicker Grid.Row="6" Grid.Column="1" SelectedDate="{Binding EndDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"/>
                 </Grid>
            </GroupBox>
            <Border DockPanel.Dock="Top" Background="#FFF0F8FF" Padding="10" Margin="5,10" CornerRadius="4">
                 <StackPanel> <TextBlock Text="Summary" FontWeight="Bold" Margin="0,0,0,8" HorizontalAlignment="Center" FontSize="14"/> <TextBlock Text="Hours" FontWeight="SemiBold" Margin="0,0,0,3"/> <Grid> <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*" MinWidth="40" /></Grid.ColumnDefinitions> <Grid.RowDefinitions><RowDefinition Height="Auto"/><RowDefinition Height="Auto"/><RowDefinition Height="Auto"/></Grid.RowDefinitions> <TextBlock Grid.Row="0" Grid.Column="0" Text="Inserted:" Margin="0,1,10,1" VerticalAlignment="Center"/> <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding TotalInsertedHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/> <TextBlock Grid.Row="1" Grid.Column="0" Text="Confirmed:" Margin="0,1,10,1" VerticalAlignment="Center"/> <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TotalConfirmedHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/> <TextBlock Grid.Row="2" Grid.Column="0" Text="Billed:" Margin="0,1,10,1" VerticalAlignment="Center"/> <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding BilledHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/> </Grid> <Separator Margin="0,8"/> <TextBlock Text="Amounts (€)" FontWeight="SemiBold" Margin="0,0,0,3"/> <Grid> <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*" MinWidth="60" /></Grid.ColumnDefinitions> <Grid.RowDefinitions><RowDefinition Height="Auto"/><RowDefinition Height="Auto"/><RowDefinition Height="Auto"/><RowDefinition Height="Auto"/></Grid.RowDefinitions> <TextBlock Grid.Row="0" Grid.Column="0" Text="Potential Total:" Margin="0,1,10,1" VerticalAlignment="Center" ToolTip="Total amount for all inserted lessons"/> <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding TotalPotentialAmount, StringFormat=C, ConverterCulture=it-IT}" VerticalAlignment="Center" HorizontalAlignment="Right"/> <TextBlock Grid.Row="1" Grid.Column="0" Text="Ready to Bill:" Margin="0,1,10,1" VerticalAlignment="Center" ToolTip="Amount for Confirmed but not yet Billed lessons"/> <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TotalConfirmedUnbilledAmount, StringFormat=C, ConverterCulture=it-IT}" VerticalAlignment="Center" HorizontalAlignment="Right" FontWeight="Bold"/> <TextBlock Grid.Row="2" Grid.Column="0" Text="Already Billed:" Margin="0,1,10,1" VerticalAlignment="Center"/> <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding TotalBilledAmount, StringFormat=C, ConverterCulture=it-IT}" VerticalAlignment="Center" HorizontalAlignment="Right"/> <TextBlock Grid.Row="3" Grid.Column="0" Text="Remaining Contract Hours:" Margin="0,5,10,1" VerticalAlignment="Center" FontWeight="SemiBold"/> <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding RemainingHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right" FontWeight="SemiBold"/> </Grid> </StackPanel>
            </Border>
            <!-- Pulsante Save usa stile specifico PrimaryButtonStyle -->
            <Button DockPanel.Dock="Top" Content="Save Contract" Style="{StaticResource PrimaryButtonStyle}" Command="{Binding DataContext.SaveContractCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ContractView}}}" IsEnabled="{Binding IsContractValid}" />
            <ContentControl DockPanel.Dock="Top" Content="{Binding}" Margin="0,15,0,0"/>
        </DockPanel>
    </Grid>
</UserControl>