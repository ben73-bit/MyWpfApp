<!-- WpfMvvmApp/Views/ContractView.xaml -->
<UserControl x:Class="WpfMvvmApp.Views.ContractView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WpfMvvmApp.Views"
             xmlns:vm="clr-namespace:WpfMvvmApp.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"> <!-- Assumendo MainViewModel come DataContext principale -->

    <UserControl.Resources>
        <!-- Questo DataTemplate dice: Quando il contenuto è un ContractViewModel, usa una LessonView per visualizzarlo -->
        <DataTemplate DataType="{x:Type vm:ContractViewModel}">
            <local:LessonView />
        </DataTemplate>
        <!-- Aggiungi qui eventuali Converter necessari, come NullToBooleanConverter se vuoi disabilitare i dettagli -->
        <!-- <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/> -->
        <!-- <local:NullToBooleanConverter x:Key="NullToBooleanConverter"/> -->
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/> <!-- Colonna per Lista Contratti -->
            <ColumnDefinition Width="Auto" MinWidth="220"/> <!-- Colonna per Dettagli Contratto -->
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Riga per Controlli (es. Add) -->
            <RowDefinition Height="Auto"/> <!-- Riga per Lista e Dettagli -->
            <RowDefinition Height="*"/>    <!-- Riga per LessonView -->
        </Grid.RowDefinitions>

        <!-- Pannello superiore per i controlli -->
        <StackPanel Orientation="Horizontal" Margin="5" Grid.Row="0" Grid.Column="0"> <!-- Spostato in Colonna 0 -->
            <Button Content="Add Contract" Command="{Binding AddNewContractCommand}" Margin="0,0,5,0"/>
            <!-- Altri controlli generali qui -->
        </StackPanel>

        <!-- Elenco dei contratti -->
        <ListView Grid.Row="1" Grid.Column="0"
                  ItemsSource="{Binding Contracts}"
                  SelectedItem="{Binding SelectedContract, Mode=TwoWay}"
                  Margin="5"
                  ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Company" DisplayMemberBinding="{Binding Company}" Width="120"/>
                    <GridViewColumn Header="Contract Number" DisplayMemberBinding="{Binding ContractNumber}" Width="110"/>
                    <GridViewColumn Header="Hourly Rate" DisplayMemberBinding="{Binding HourlyRate, StringFormat=C}" Width="80"/> <!-- Formato valuta -->
                    <GridViewColumn Header="Total Hours" DisplayMemberBinding="{Binding TotalHours}" Width="70"/>
                    <GridViewColumn Header="Billed Hours" DisplayMemberBinding="{Binding BilledHours}" Width="70"/>
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Pannello per i dettagli del contratto selezionato -->
        <!-- Assicurati che il DataContext sia il ContractViewModel selezionato -->
        <StackPanel Grid.Row="1" Grid.Column="1" Margin="5"
                    DataContext="{Binding SelectedContract}"
                    IsEnabled="{Binding SelectedContract, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource NullToBooleanConverter}}">
                    <!-- Usa NullToBooleanConverter per disabilitare se null -->
                    <!-- Assicurati che NullToBooleanConverter sia definito nelle risorse -->

            <TextBlock Text="Contract Details" FontWeight="Bold" Margin="0,0,0,5"/>

            <TextBlock Text="Company:" />
            <TextBox Text="{Binding Company, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="0,0,0,5"/>

            <TextBlock Text="Contract Number:" />
            <TextBox Text="{Binding ContractNumber, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="0,0,0,5"/>

            <TextBlock Text="Hourly Rate:" />
            <TextBox Text="{Binding HourlyRate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat=C}" Margin="0,0,0,5"/>

            <TextBlock Text="Total Contract Hours:" />
            <TextBox Text="{Binding TotalHours, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="0,0,0,5"/>

            <TextBlock Text="Billed Hours (Manual):" />
            <!-- BilledHours: Decidi se deve essere editabile o calcolato/sola lettura -->
            <TextBox Text="{Binding BilledHours, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="0,0,0,10"/>

            <!-- NUOVO: Sezione Ore Calcolate -->
            <Border Background="AliceBlue" Padding="8" Margin="0,0,0,10" CornerRadius="3">
                <StackPanel>
                     <TextBlock Text="Lesson Hours Summary" FontWeight="Bold" Margin="0,0,0,5" HorizontalAlignment="Center"/>
                     <Grid>
                         <Grid.ColumnDefinitions>
                             <ColumnDefinition Width="Auto"/>
                             <ColumnDefinition Width="*" MinWidth="40" />
                         </Grid.ColumnDefinitions>
                         <Grid.RowDefinitions>
                             <RowDefinition Height="Auto"/>
                             <RowDefinition Height="Auto"/>
                             <RowDefinition Height="Auto"/>
                         </Grid.RowDefinitions>

                         <TextBlock Grid.Row="0" Grid.Column="0" Text="Inserted:" FontWeight="SemiBold" Margin="0,1,10,1" VerticalAlignment="Center"/>
                         <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding TotalInsertedHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/>

                         <TextBlock Grid.Row="1" Grid.Column="0" Text="Confirmed:" FontWeight="SemiBold" Margin="0,1,10,1" VerticalAlignment="Center"/>
                         <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TotalConfirmedHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right"/>

                         <TextBlock Grid.Row="2" Grid.Column="0" Text="Remaining:" FontWeight="SemiBold" Margin="0,1,10,1" VerticalAlignment="Center"/>
                         <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding RemainingHours, StringFormat='{}{0:F2} h'}" VerticalAlignment="Center" HorizontalAlignment="Right">
                                 <!-- Opzionale: Aggiungere trigger per colore se negativo -->
                                 <!-- <TextBlock.Style>...</TextBlock.Style> -->
                         </TextBlock>
                     </Grid>
                </StackPanel>
            </Border>
            <!-- Fine Sezione Ore Calcolate -->

            <Button Content="Save Contract" Command="{Binding DataContext.SaveContractCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    IsEnabled="{Binding IsValid}" Margin="0,5,0,0" />
                    <!-- Comando Save sul DataContext del UserControl (MainViewModel) -->
        </StackPanel>

        <!-- ContentControl per LessonView -->
        <!-- Lega il Content al SelectedContract del MainViewModel -->
        <!-- Grazie al DataTemplate definito nelle risorse, userà LessonView -->
        <ContentControl Grid.Row="2" Grid.ColumnSpan="2" Margin="5,10,5,5"
                        Content="{Binding SelectedContract}"/>
                        <!-- Il DataContext di LessonView sarà quindi il ContractViewModel selezionato -->
    </Grid>
</UserControl>