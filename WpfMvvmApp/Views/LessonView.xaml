<!-- WpfMvvmApp/Views/LessonView.xaml -->
<UserControl x:Class="WpfMvvmApp.Views.LessonView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WpfMvvmApp.Views"
             xmlns:converters="clr-namespace:WpfMvvmApp.Converters"
             xmlns:models="clr-namespace:WpfMvvmApp.Models"
             xmlns:vm="clr-namespace:WpfMvvmApp.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:rules="clr-namespace:WpfMvvmApp.ValidationRules"
             xmlns:behaviors="clr-namespace:WpfMvvmApp.Behaviors" 
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=vm:ContractViewModel}">

    <UserControl.Resources>
        <!-- Convertitori -->
        <converters:BoolToButtonTextConverter x:Key="BoolToButtonTextConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:EndTimeConverter x:Key="EndTimeConverter"/>

        <!-- Stili -->
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsConfirmed}" Value="False"><Setter Property="Background" Value="LightGoldenrodYellow"/></DataTrigger>
                <DataTrigger Binding="{Binding IsConfirmed}" Value="True"><Setter Property="Background" Value="PaleGreen"/></DataTrigger>
                <Trigger Property="IsSelected" Value="True"><Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/><Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/></Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ActionButtonStyle" TargetType="Button">
             <Setter Property="Margin" Value="2"/><Setter Property="Padding" Value="5,2"/><Setter Property="MinWidth" Value="50"/>
             <Style.Triggers><Trigger Property="IsEnabled" Value="False"><Setter Property="Opacity" Value="0.5"/></Trigger></Style.Triggers>
        </Style>
        <Style x:Key="InputTextBoxStyle" TargetType="{x:Type TextBox}">
             <Setter Property="VerticalContentAlignment" Value="Center"/>
             <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
             <Style.Triggers>
                 <Trigger Property="Validation.HasError" Value="true">
                     <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                     <Setter Property="BorderBrush" Value="Red"/>
                     <Setter Property="BorderThickness" Value="1.5"/>
                 </Trigger>
             </Style.Triggers>
        </Style>
         <Style x:Key="ImportExportButtonStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
             <Setter Property="MinWidth" Value="80"/>
             <Setter Property="Margin" Value="5,0"/>
             <Setter Property="Background" Value="LightSteelBlue"/>
         </Style>
    </UserControl.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Riga 0: Titolo e Pulsanti Import/Export -->
        <Grid Grid.Row="0" Margin="0,0,0,10">
            <Grid.ColumnDefinitions> <ColumnDefinition Width="*"/> <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="Auto"/> </Grid.ColumnDefinitions>
            <TextBlock Text="Lessons" FontWeight="Bold" FontSize="14" VerticalAlignment="Center" Grid.Column="0" />
            <Button Grid.Column="1" Content="Import (.ics)" Style="{StaticResource ImportExportButtonStyle}" Command="{Binding ImportLessonsCommand}" ToolTip="Import lessons from an iCalendar (.ics) file"/>
            <Button Grid.Column="2" Content="Export (.ics)" Style="{StaticResource ImportExportButtonStyle}" Command="{Binding ExportLessonsCommand}" ToolTip="Export these lessons to an iCalendar (.ics) file"/>
        </Grid>

        <!-- Riga 1: Lista Lezioni -->
        <ListView Grid.Row="1"
                  Name="LessonsListView"
                  ItemsSource="{Binding Lessons}"
                  Margin="0,0,0,10"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  SelectionMode="Extended"
                  behaviors:ListViewWheelScrollBehavior.IsEnabled="True"> <!-- APPLICATO IL BEHAVIOR QUI -->
                                                                         <!-- RIMOSSO PreviewMouseWheel -->

            <i:Interaction.Triggers>
                <i:KeyTrigger Key="Delete">
                    <i:InvokeCommandAction Command="{Binding RemoveSelectedLessonsCommand}" CommandParameter="{Binding ElementName=LessonsListView, Path=SelectedItems}"/>
                </i:KeyTrigger>
            </i:Interaction.Triggers>

            <ListView.ItemContainerStyle><StaticResource ResourceKey="{x:Type ListViewItem}"/></ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Date" Width="90" DisplayMemberBinding="{Binding StartDateTime, StringFormat='dd/MM/yyyy'}" />
                    <GridViewColumn Header="Start" Width="60" DisplayMemberBinding="{Binding StartDateTime, StringFormat='HH:mm'}" />
                    <GridViewColumn Header="Duration" Width="70" DisplayMemberBinding="{Binding Duration, StringFormat='hh\\:mm'}" />
                    <GridViewColumn Header="End" Width="60">
                        <GridViewColumn.DisplayMemberBinding>
                            <MultiBinding Converter="{StaticResource EndTimeConverter}" StringFormat="HH:mm">
                                <Binding Path="StartDateTime"/>
                                <Binding Path="Duration"/>
                            </MultiBinding>
                        </GridViewColumn.DisplayMemberBinding>
                    </GridViewColumn>
                    <GridViewColumn Header="Summary" Width="150" DisplayMemberBinding="{Binding Summary}" />
                    <GridViewColumn Header="Confirmed" Width="80">
                        <GridViewColumn.CellTemplate><DataTemplate DataType="{x:Type models:Lesson}">
                            <CheckBox IsChecked="{Binding IsConfirmed, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="Click to confirm/unconfirm lesson" IsEnabled="{Binding DataContext.IsEditingLesson, RelativeSource={RelativeSource AncestorType=ListView}, Converter={StaticResource InverseBooleanConverter}}">
                                <i:Interaction.Triggers><i:EventTrigger EventName="Click"><i:InvokeCommandAction Command="{Binding DataContext.ToggleLessonConfirmationCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}"/></i:EventTrigger></i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate></GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Actions" Width="Auto">
                        <GridViewColumn.CellTemplate><DataTemplate DataType="{x:Type models:Lesson}">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Edit" Style="{StaticResource ActionButtonStyle}" Command="{Binding DataContext.EditLessonCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}" ToolTip="Edit this lesson" />
                                <Button Content="Remove" Style="{StaticResource ActionButtonStyle}" Background="LightCoral" Command="{Binding DataContext.RemoveLessonCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}" ToolTip="Remove this lesson"/>
                            </StackPanel>
                        </DataTemplate></GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Riga 2: Pannello per Aggiungere/Modificare Lezione -->
        <Border Grid.Row="2" BorderBrush="LightGray" BorderThickness="0,1,0,0" Padding="10">
           <Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/> <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Start:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <DatePicker Grid.Column="1" SelectedDate="{Binding NewLessonStartDateTime, UpdateSourceTrigger=PropertyChanged}" Width="110" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <TextBlock Grid.Column="2" Text="at" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <TextBox Grid.Column="3" Width="50" Style="{StaticResource InputTextBoxStyle}" ToolTip="Start Time (HH:MM)" Margin="0,0,15,0">
                    <TextBox.Text> <Binding Path="NewLessonStartDateTime" UpdateSourceTrigger="PropertyChanged" StringFormat="HH:mm" ConverterCulture="it-IT"/> </TextBox.Text>
                </TextBox>
                <TextBlock Grid.Column="4" Text="Duration:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <TextBox Grid.Column="5" Width="55" Style="{StaticResource InputTextBoxStyle}" ToolTip="Duration (HH:MM)" Margin="0,0,15,0">
                     <TextBox.Text> <Binding Path="NewLessonDuration" UpdateSourceTrigger="PropertyChanged" ConverterCulture="it-IT"> <Binding.ValidationRules> <rules:TimeSpanFormatRule ValidatesOnTargetUpdated="True"/> <ExceptionValidationRule /> </Binding.ValidationRules> </Binding> </TextBox.Text>
                </TextBox>
                <TextBlock Grid.Column="6" Text="Summary:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <TextBox Grid.Column="7" Style="{StaticResource InputTextBoxStyle}" ToolTip="Lesson Summary/Title" Margin="0,0,15,0" MinWidth="100" Text="{Binding NewLessonSummary, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Grid.Column="8" Style="{StaticResource ActionButtonStyle}" Background="LightGreen" Command="{Binding AddLessonCommand}">
                        <TextBlock Text="{Binding IsEditingLesson, Converter={StaticResource BoolToButtonTextConverter}}" FontWeight="SemiBold"/>
                </Button>
                <Button Grid.Column="9" Content="Cancel" Style="{StaticResource ActionButtonStyle}" Background="LightGray" Command="{Binding CancelEditLessonCommand}" Visibility="{Binding IsEditingLesson, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="5,0,0,0"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>